

2) system software:

- Java Spring Boot based REST API server and microservices [backend]
  - Spring MVC (Spring&#39;s contender of JSF)
  - Tomcat Java Servlet
  - Maven Dependency Manager
  - JavaBeans functionality
  - Postgresql for our Relational Database
  - XML configuration
- Android app with React Native for the eater [frontend]
- Android app with React Native for the staff [frontend]

3) we use posgresql (through Heroku) for our DB

- ERD pic

- schema pic

The following tables can be changed by an eaters action:

Orders (C, U)

Payments (C,U)

tables (U)

Calls for waiter (C)

Order items (C)

Credit cards (C)

The following tables can be changed by a restaurant worker:

Orders (U)

Dishes (C)

Shifts (C)

Calls resolved (C)

Working (C)



4) human machine interface:

An eater can interact with the app using the following GUI:

1. 1)Restaurant search GUI – this is the starting eater screen, where he can search for a particular restaurant, either by using 
     it's full name, or by searching for restaurants through a particular filter, for instance he could search for all restaurants
     with a Japanese cuisine.
2. 2)Restaurant info screen GUI – after choosing a restaurant the user is presented with a GUI that gives him information about the 
     restaurant, including a menu and an option to reserve a table assuming there are available tables in real time.
3. 3) "while at restaurant" GUI – this is the GUI the eater sees after making a reservation. here he  is presented with the following 
      buttons: "place an order"; which leads to another GUI screen. "payment" which again leads to another GUI screen. 
      And "call a waite" which registers a call in the DB and the restaurant workers GUI. In addition after placing an order, 
      the items ordered are presented in this screen.
4. 4)Order placement GUI – the user sees this when he presses the "place an order" button, he gets a screen with the menu and can add 
     items to his order and click "place order" when he is finished.
5. 5)Payment GUI – the user sees this when he presses the "pay" button, he is then prompted with a screen asking him for the
     relevant payment information.

A restaurant worker can interact with the app using the following GUI:

1. 1)Open orders screen – int his screen the workers can see the open orders and update their status. When the chef presses the 
     "ready" button, the status of the order changes from "in preparation" to "ready". Then a waiter would deliver the order
     to the eater and press the "delivered" button, changing the order status to "delivered". After the eater pays for his meal,
     the order would disappear from this screen.
2. 2)Change menu GUI – here a worker (with the right permission) can add or remove dishes from the menu.

